// <auto-generated />
using System;
using CaloriProject.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaloriProject.DAL.Migrations
{
    [DbContext(typeof(CaloriDBContext))]
    [Migration("20240322113727_2")]
    partial class _2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaloriProject.DAL.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4492),
                            KategoriAdi = "Kahvalti",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4493),
                            KategoriAdi = "Ara Sicak",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4494),
                            KategoriAdi = "Aperatifler",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4495),
                            KategoriAdi = "Corbalar",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4496),
                            KategoriAdi = "Ana Yemekler",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4497),
                            KategoriAdi = "Icecekler",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4498),
                            KategoriAdi = "Tatli",
                            Status = 1
                        });
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Boy")
                        .HasColumnType("float");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kilo")
                        .HasColumnType("float");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.KullaniciOgunYiyecek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("OgunID")
                        .HasColumnType("int");

                    b.Property<double>("Porsiyon")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YiyecekID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("OgunID");

                    b.HasIndex("YiyecekID");

                    b.ToTable("KullaniciOgunYiyecekler");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Ogun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OgunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ogünler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4365),
                            OgunAdi = "Kahvalti",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4378),
                            OgunAdi = "Ogle",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4379),
                            OgunAdi = "Aksam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Yiyecek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Kalori")
                        .HasColumnType("float");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<double>("Porsiyon")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YiyecekAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriID");

                    b.ToTable("Yiyecekler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4518),
                            Kalori = 300.0,
                            KategoriID = 5,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Manti"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4520),
                            Kalori = 200.0,
                            KategoriID = 1,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Menemen"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4521),
                            Kalori = 300.0,
                            KategoriID = 3,
                            Porsiyon = 2.0,
                            Status = 1,
                            YiyecekAdi = "Patates Kızartmasi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4522),
                            Kalori = 500.0,
                            KategoriID = 5,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Adana Kebap"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4524),
                            Kalori = 200.0,
                            KategoriID = 4,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Mercimek Corbasi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4525),
                            Kalori = 400.0,
                            KategoriID = 7,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Baklava"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4526),
                            Kalori = 50.0,
                            KategoriID = 6,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Su"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4527),
                            Kalori = 200.0,
                            KategoriID = 1,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Omlet"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4528),
                            Kalori = 400.0,
                            KategoriID = 2,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Yaprak Ciger"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 3, 22, 14, 37, 26, 864, DateTimeKind.Local).AddTicks(4529),
                            Kalori = 200.0,
                            KategoriID = 7,
                            Porsiyon = 1.0,
                            Status = 1,
                            YiyecekAdi = "Sütlü Nuriye"
                        });
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.KullaniciOgunYiyecek", b =>
                {
                    b.HasOne("CaloriProject.DAL.Entities.Kullanici", "Kullanici")
                        .WithMany("kullaniciOgunYiyecekler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaloriProject.DAL.Entities.Ogun", "Ogun")
                        .WithMany("kullaniciOgunYiyecekler")
                        .HasForeignKey("OgunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaloriProject.DAL.Entities.Yiyecek", "Yiyecek")
                        .WithMany("kullaniciOgunYiyecekler")
                        .HasForeignKey("YiyecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Ogun");

                    b.Navigation("Yiyecek");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Yiyecek", b =>
                {
                    b.HasOne("CaloriProject.DAL.Entities.Kategori", "Kategori")
                        .WithMany("Yiyecekler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Kategori", b =>
                {
                    b.Navigation("Yiyecekler");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Kullanici", b =>
                {
                    b.Navigation("kullaniciOgunYiyecekler");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Ogun", b =>
                {
                    b.Navigation("kullaniciOgunYiyecekler");
                });

            modelBuilder.Entity("CaloriProject.DAL.Entities.Yiyecek", b =>
                {
                    b.Navigation("kullaniciOgunYiyecekler");
                });
#pragma warning restore 612, 618
        }
    }
}
